@model HomylogicAsp.Models.Devices.Homyoko.EditIVTControllerViewModel

@using X.Homylogic.Models.Objects.Devices.Homyoko;

@{
    ViewData["Title"] = "IVT controller history";

    IVTController ivtController = (IVTController)X.Homylogic.Body.Runtime.Devices.FindDataRecord(ViewData.Model.ID);
    if (ivtController == null)
    {
        ViewData["SubTitle"] = "IVT controller device not found.";
    }
    else {
        ViewData["SubTitle"] = ivtController.Name;
    }

    


}

<h1>@ViewData["Title"]</h1>
<h4><img onclick="OnNavigateBack()" src="~/images/svg/arrow-left-short.svg" class="img-navigate-back" />@ViewData["SubTitle"]</h4>

<div class="form-group row">
    <label class="col-sm-2 col-form-label">Date period</label>
    <div class="col-sm-3">
        <select id="history-selected-data-range" class="browser-default custom-select form-control" onchange="OnDataRangeChanged()">
            <option value="@HomylogicAsp.Controllers.Devices.HistoryController.SELECTABLE_RANGE_DEFALT_KEY">@HomylogicAsp.Controllers.Devices.HistoryController.SELECTABLE_RANGE_DEFALT_CAPTION</option>
        </select>
    </div>
</div>

<canvas id="chart-temperatures"></canvas>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/chartjs/Chart.bundle.js"></script>

<script>
    var backUrl = null;

    $(document).ready(function () {
        // Read last selected data range key from URL param and cookies on first time when url is empty.
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        var rangeKey = urlParams.get('key');
        if (rangeKey == null) {
            rangeKey = getCookie("SelectedHistoryRangeDevice" + @ivtController.ID);
        }
        backUrl = urlParams.get('backUrl');

        // Get available history data ranges.
        var url = '/Devices/History/GetSelectablesDataRange/' + @ivtController.ID;
        $.get(url, function (data) {
            if (data == null) return;
            var arrData = data.split(";");
            var htmlOptions;
            for (var i = 0; i < arrData.length; i++) {
                if (arrData[i].trim() == '') continue;
                arrValues = arrData[i].split(":");
                var key = arrValues[0];
                var caption = arrValues[1];
                var selected = (rangeKey == key) ? " selected " : "";
                htmlOptions += '<option value="' + key + '"' + selected + '>' + caption + '</option>';
            }
            $("#history-selected-data-range").html(htmlOptions);
        });

        // Charts configuration.
        var scaleX_Unit = "hour"; // Default for today and yesterday.
        if (rangeKey != null) {
            if (rangeKey.startsWith("[days") || rangeKey.startsWith("[month-"))
                scaleX_Unit = "day";
            if (rangeKey.startsWith("[year-"))
                scaleX_Unit = "month";
        }
        var configTemperatures = {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Temperature floor',
                    backgroundColor: 'rgba(255, 0, 0, 0.7)',
                    borderColor: 'rgba(255, 0, 0, 0.5)',
                    fill: false
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'Temperatures'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        type: 'time',
                        distribution: 'series',
                        time: {
                            unit: scaleX_Unit,
                            displayFormats: {
                                hour: 'HH:mm',
                                day: 'MMM D',
                                month: 'MMM D'
                            }
                        },
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Temperature °C'
                        }
                    }]
                }
            }
        };

        // Create history charts objects.
        var ctxTemps = document.getElementById('chart-temperatures').getContext('2d');
        window.chartTemps = new Chart(ctxTemps, configTemperatures);

        // Load history data.
        var url = '/Devices/History/GetHistoryHomyokoIVTController/' + @ivtController.ID + '?rangeKey=' + rangeKey;
        // Add group per hour for small screens, because charts are too small for too many data points.
        if (window.innerWidth < 900)
            url += '&dataGroupType=' + @Convert.ToInt32(HomylogicAsp.Controllers.Devices.HistoryController.DataGroupTypes.AvgHour);
        $.get(url, function (data) {
            if (data == null) return;
            var arrData = data.split(";");
            for (var i = 0; i < arrData.length; i++) {
                if (arrData[i].trim() == '') continue;
                arrValues = arrData[i].split(",");
                var time = new Date(arrValues[0]);
                var temp = arrValues[1];
                configTemperatures.data.labels.push(time);
                configTemperatures.data.datasets[0].data.push({ x: time, y: temp });
            }
            window.chartTemps.update();
        });

        // Nastaviť obmedzenie na maximálnu šírku stránky,
        // nastavuje sa podľa výšky, aby graf vošiel akurát na stránku.
        $("#body-container").css("max-width", window.outerHeight + "px");

    });
    function OnDataRangeChanged()
    {
        // Save current selected option in cookies.
        var rangeKey = $("#history-selected-data-range").val();
        document.cookie = "SelectedHistoryRangeDevice" + @ivtController.ID + "=" + rangeKey;

        // Refresh current page with new selected rangeKey parameter value.
        window.location = "/Devices/History/IVTController/" + @ivtController.ID + "?key=" + rangeKey + "&backUrl=" + backUrl ;
    }
    function OnNavigateBack() {
        if (backUrl == null) {
            window.history.back();
        } else {
            window.location = backUrl;
        }
    }

</script>

