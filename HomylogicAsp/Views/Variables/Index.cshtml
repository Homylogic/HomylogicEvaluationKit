@model VariablesViewModel

@using X.Homylogic.Models.Objects;

@{
    ViewData["Title"] = "Variables";
    X.App.Users.UserRecord CurrentUser = X.Homylogic.Body.Environment.Users.GetCurrentUser(ViewContext.HttpContext.Request.Cookies["AccessToken"]);
}

<h1>@ViewData["Title"]</h1>

@if (!CurrentUser.IsAdmin && !((X.Homylogic.Models.Users.HomylogicPrivilegeList)CurrentUser.Privileges).Variables.VariableList)
{
    <p>User <strong>@CurrentUser.Name</strong> has not allowed permission.</p>
    <input class="btn btn-primary" type="button" onclick="OnLogInClick()" value="Switch user" />
    <script>
        function OnLogInClick() {
            window.location = "/Home/UserLogIn?url=/Variables";
        }
    </script>
    return;
}


<div class="d-flex p-2 bd-highlight">
    <input class="btn btn-primary flex-margin" type="button" onclick="OnAddClick()" value="Add" />
    <input class="btn btn-primary flex-margin" type="button" onclick="OnEditClick()" value="Edit" />
    <input class="btn btn-primary flex-margin" type="button" onclick="OnDeleteClick()" value="Delete" />
</div>

<label id="label-error" class="control-label text-danger" style="display: none"></label>

<table id="variable-list" class="table table-bordered table-hover" ondblclick="OnEditClick()">
    <thead>
        <tr>
            <th hidden>ID</th>
            <th>Name</th>
            <th>Value</th>
            <th>Notice</th>
        </tr>
    </thead>
    <tbody>
        @try
        {
            @for (int i = 0; i < ViewData.Model.VariableList.List.Count; i++)
            {
                VariableX variable = (VariableX)ViewData.Model.VariableList.List[i];

                string className = "clickable-row";

                if (variable.ID == ViewData.Model.SelectedID)
                    className = $"{className} table-primary";

                //string varTypeText = X.Basic.CodeDom.Ennum.GetDescription(typeof(VariableX.VariableTypes), variable.VariableType);
                string varTypeImage = (variable.VariableType switch
                {
                    VariableX.VariableTypes.Text => "/images/variables/Variable_Text_16.png",
                    VariableX.VariableTypes.Integer => "/images/variables/Variable_Integer_16.png",
                    VariableX.VariableTypes.Decimal => "/images/variables/Variable_Decimal_16.png",
                    VariableX.VariableTypes.YesNo => "/images/variables/Variable_YesNo_16.png",
                    _ => "/images/variables/Variable_None_16.png"
                });

                string style = string.Empty;
                if (variable.Disabled) style = "color: gray";

                <tr id="table-row-@variable.ID" class='@className' style='@style'>
                    <td hidden>@variable.ID</td>
                    <td><img src="@varTypeImage" />&nbsp;@variable.Name</td>
                    <td>@variable.ToString()</td>
                    <td>@variable.Notice</td>
                </tr>
            }
        }
        catch (Exception ex)
        {
            X.Homylogic.Body.Environment.Logs.Error($"Problem reading variables.", ex, this.GetType().Name);
        }
    </tbody>
</table>

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
    var SelectedRowID = @ViewData.Model.SelectedID;
    $(document).ready(function () {
        $('#variable-list tr').click(function () {
            if (this.className != "clickable-row") return;
            $(this).addClass('table-primary').siblings().removeClass('table-primary');
            SelectedRowID = this.cells[0].innerHTML;
            document.cookie = "SelectedVariableID=" + SelectedRowID;
        });
        //setInterval(AutoRefreshState, 3000);
    });

    function OnControlsClick() {
        //window.location = "/Devices/DeviceControls/" + SelectedRowID;
    }
    function OnAddClick()
    {
        window.location = '@Url.Action("", "SelectedObjectType", new { ObjectTypeName  = "Variables" })';
    }
    function OnEditClick()
    {
        window.location = "/Variables/Edit/" + SelectedRowID;
    }
    function OnDeleteClick() {
        window.location = "/Variables/Delete/" + SelectedRowID;
    }
    function AutoRefreshState() {
        /* NOT USED YED - But in future will updates variable value
        $.get('/Devices/GetIsOpen', function (data) {
            if (data == null) return;
            var arrData = data.split(";");
            for (var i = 0; i < arrData.length; i++) {
                if (arrData[i].trim() == '') continue;
                arrValues = arrData[i].split(":");
                var id = arrValues[0];
                var state = arrValues[1];
                var rowId = "table-row-" + id;
                var curCell = document.getElementById(rowId).cells[1];
                if (curCell == null) continue;
                if (state == '1')
                    curCell.innerHTML = "Open";
                else
                    curCell.innerHTML = "Close";
            }
        });*/
    }

</script>

